// Configuration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import LUX
import FunNet

{{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} let serverConfiguration = ServerConfiguration(scheme: "{{{scheme}}}", host: "{{{host}}}", apiRoute: "{{{basePathWithoutHost}}}")

{{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} struct AppEnv {
    {{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} var serverConfig = serverConfiguration
}

{{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} var Current = AppEnv()

{{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} extension EndpointProtocol {
    func toCombineCall(serverConfig: ServerConfiguration = Current.serverConfig, responder: CombineNetworkResponder? = CombineNetworkResponder()) -> CombineNetCall {
        return CombineNetCall(configuration: serverConfig, self, responder: responder)
    }
}
